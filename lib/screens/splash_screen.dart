import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_core/firebase_core.dart';
import 'login_screen.dart';
import 'home_screen.dart';

class SplashScreen extends StatefulWidget {
  final Function(Locale)? onLocaleChange;

  const SplashScreen({super.key, this.onLocaleChange});

  @override
  State<SplashScreen> createState() => _SplashScreenState();
}

class _SplashScreenState extends State<SplashScreen> {
  @override
  void initState() {
    super.initState();
    _initializeFirebaseAndCheckUser();
  }

  /// üîπ Kh·ªüi t·∫°o Firebase v√† ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p
  Future<void> _initializeFirebaseAndCheckUser() async {
    try {
      // ƒê·∫£m b·∫£o Firebase ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o
      await Firebase.initializeApp();

      // T·∫°m d·ª´ng 2 gi√¢y ƒë·ªÉ hi·ªÉn th·ªã logo (hi·ªáu ·ª©ng splash)
      await Future.delayed(const Duration(seconds: 2));

      // L·∫•y th√¥ng tin user hi·ªán t·∫°i
      final user = FirebaseAuth.instance.currentUser;

      if (!mounted) return;

      // N·∫øu ƒë√£ ƒëƒÉng nh·∫≠p
      if (user != null) {
        Navigator.pushReplacement(
          context,
          MaterialPageRoute(
            builder: (context) => HomeScreen(
              onLocaleChange: widget.onLocaleChange,
            ),
          ),
        );
      } else {
        // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p
        Navigator.pushReplacement(
          context,
          MaterialPageRoute(builder: (context) => const LoginScreen()),
        );
      }
    } catch (e) {
      // N·∫øu c√≥ l·ªói Firebase, hi·ªÉn th·ªã th√¥ng b√°o nh·∫π v√† cho ph√©p th·ª≠ l·∫°i
      debugPrint("üî• L·ªói Firebase kh·ªüi t·∫°o: $e");
      if (!mounted) return;
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text('Kh√¥ng th·ªÉ k·∫øt n·ªëi Firebase. Vui l√≤ng th·ª≠ l·∫°i.'),
          backgroundColor: Colors.redAccent,
        ),
      );
      await Future.delayed(const Duration(seconds: 2));
      _initializeFirebaseAndCheckUser();
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            colors: [Colors.blueAccent, Colors.lightBlueAccent],
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
          ),
        ),
        child: const Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Icon(Icons.fitness_center, size: 150, color: Colors.white),
              SizedBox(height: 20),
              Text(
                'BMI Calculator',
                style: TextStyle(
                  fontSize: 32,
                  fontWeight: FontWeight.bold,
                  color: Colors.white,
                  letterSpacing: 1.2,
                ),
              ),
              SizedBox(height: 20),
              CircularProgressIndicator(color: Colors.white),
              SizedBox(height: 10),
              Text(
                'ƒêang kh·ªüi t·∫°o...',
                style: TextStyle(color: Colors.white70),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
